// <auto-generated />
using System;
using DataAccessLayer.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20211029185445_mig1")]
    partial class mig1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EntityLayer.Concrete.Departman", b =>
                {
                    b.Property<int>("DepartmanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmanAd")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmanId");

                    b.ToTable("Departmans");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Personel", b =>
                {
                    b.Property<int>("PersonelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartmanId")
                        .HasColumnType("int");

                    b.Property<string>("PersonelAdSoyad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonelEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonelKullaniciAdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonelSifre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YetkiId")
                        .HasColumnType("int");

                    b.HasKey("PersonelId");

                    b.HasIndex("DepartmanId");

                    b.HasIndex("YetkiId");

                    b.ToTable("Personels");
                });

            modelBuilder.Entity("EntityLayer.Concrete.TaskAksiyon", b =>
                {
                    b.Property<int>("AksiyonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AksiyonAciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AksiyonBaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AksiyonBitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AksiyonKayitTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TaskDetayTaskId")
                        .HasColumnType("int");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("AksiyonId");

                    b.HasIndex("TaskDetayTaskId");

                    b.ToTable("TaskAksiyons");
                });

            modelBuilder.Entity("EntityLayer.Concrete.TaskDetay", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DurumId")
                        .HasColumnType("int");

                    b.Property<int>("OncelikId")
                        .HasColumnType("int");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TaskBaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaskBaslik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TaskBitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TaskDurumDurumId")
                        .HasColumnType("int");

                    b.Property<string>("TaskIcerik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TaskOlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TaskOncelikOncelikId")
                        .HasColumnType("int");

                    b.HasKey("TaskId");

                    b.HasIndex("PersonelId");

                    b.HasIndex("TaskDurumDurumId");

                    b.HasIndex("TaskOncelikOncelikId");

                    b.ToTable("TaskDetays");
                });

            modelBuilder.Entity("EntityLayer.Concrete.TaskDokuman", b =>
                {
                    b.Property<int>("DokumanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DokumanAciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DokumanBaslık")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DokumanUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TaskDetayTaskId")
                        .HasColumnType("int");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("DokumanId");

                    b.HasIndex("TaskDetayTaskId");

                    b.ToTable("TaskDokumans");
                });

            modelBuilder.Entity("EntityLayer.Concrete.TaskDurum", b =>
                {
                    b.Property<int>("DurumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DurumAd")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DurumId");

                    b.ToTable("TaskDurums");
                });

            modelBuilder.Entity("EntityLayer.Concrete.TaskOncelik", b =>
                {
                    b.Property<int>("OncelikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OncelikAd")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OncelikId");

                    b.ToTable("TaskOnceliks");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Yetki", b =>
                {
                    b.Property<int>("YetkiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("YetkiAd")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("YetkiId");

                    b.ToTable("Yetkis");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Personel", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Departman", "Departman")
                        .WithMany("Personels")
                        .HasForeignKey("DepartmanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Concrete.Yetki", "yetkis")
                        .WithMany("personels")
                        .HasForeignKey("YetkiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departman");

                    b.Navigation("yetkis");
                });

            modelBuilder.Entity("EntityLayer.Concrete.TaskAksiyon", b =>
                {
                    b.HasOne("EntityLayer.Concrete.TaskDetay", "TaskDetay")
                        .WithMany()
                        .HasForeignKey("TaskDetayTaskId");

                    b.Navigation("TaskDetay");
                });

            modelBuilder.Entity("EntityLayer.Concrete.TaskDetay", b =>
                {
                    b.HasOne("EntityLayer.Concrete.Personel", "Personel")
                        .WithMany("TaskDetays")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityLayer.Concrete.TaskDurum", "TaskDurum")
                        .WithMany("TaskDetays")
                        .HasForeignKey("TaskDurumDurumId");

                    b.HasOne("EntityLayer.Concrete.TaskOncelik", "TaskOncelik")
                        .WithMany("TaskDetays")
                        .HasForeignKey("TaskOncelikOncelikId");

                    b.Navigation("Personel");

                    b.Navigation("TaskDurum");

                    b.Navigation("TaskOncelik");
                });

            modelBuilder.Entity("EntityLayer.Concrete.TaskDokuman", b =>
                {
                    b.HasOne("EntityLayer.Concrete.TaskDetay", "TaskDetay")
                        .WithMany("TaskDokumans")
                        .HasForeignKey("TaskDetayTaskId");

                    b.Navigation("TaskDetay");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Departman", b =>
                {
                    b.Navigation("Personels");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Personel", b =>
                {
                    b.Navigation("TaskDetays");
                });

            modelBuilder.Entity("EntityLayer.Concrete.TaskDetay", b =>
                {
                    b.Navigation("TaskDokumans");
                });

            modelBuilder.Entity("EntityLayer.Concrete.TaskDurum", b =>
                {
                    b.Navigation("TaskDetays");
                });

            modelBuilder.Entity("EntityLayer.Concrete.TaskOncelik", b =>
                {
                    b.Navigation("TaskDetays");
                });

            modelBuilder.Entity("EntityLayer.Concrete.Yetki", b =>
                {
                    b.Navigation("personels");
                });
#pragma warning restore 612, 618
        }
    }
}
